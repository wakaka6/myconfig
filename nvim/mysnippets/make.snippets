snippet cpp "auto generator makefile"
CC = g++
CFLAGS = -Wall -g
SUBFIX = cpp

WORK_DIR  = $(shell pwd)
SRC_DIR = $(WORK_DIR)/src
OBJ_DIR = $(WORK_DIR)/obj
INC_PATH = $(WORK_DIR)/inc
DST_DIR = $(WORK_DIR)/bin
TESTS_DIR = $(WORK_DIR)/tests

SRC = $(wildcard $(SRC_DIR)/*.$(SUBFIX))
OBJS = $(patsubst $(SRC_DIR)/%.$(SUBFIX), $(OBJ_DIR)/%.o, $(SRC))
TARGET = $(DST_DIR)/${1:program}

TESTS = $(wildcard $(TESTS_DIR)/*.sh)


$(shell [ -d $(SRC_DIR) ] || mkdir -p $(SRC_DIR) )
$(shell [ -d $(INC_PATH) ] || mkdir -p $(INC_PATH) )
$(shell [ -d $(OBJ_DIR) ] || mkdir -p $(OBJ_DIR) )
$(shell [ -d $(DST_DIR) ] || mkdir -p $(DST_DIR) )
$(shell [ -d $(TESTS_DIR) ] || mkdir -p $(TESTS_DIR) )

ALL: $(TARGET)

$(TARGET): $(OBJS)
	$(CC) -o $@ $^ $(CFLAGS)

$(OBJS):$(OBJ_DIR)/%.o:$(SRC_DIR)/%.$(SUBFIX)
	$(CC) -c $< -o $@ -I $(INC_PATH) $(CFLAGS)

test: $(TARGET)
	$(MAKE) $(TESTS)
	@printf '\e[32mPassed all tests\e[0m\n'

$(TESTS):
	@echo
	@echo '============'
	@printf "\e[35mTesting $(notdir $@) \e[0m\n"
	@$@
	@printf '\e[32mOK\e[0m\n'
	@echo '============'
	@echo


.PHONY: clean ALL test $(TESTS)
clean:
	-rm -rf $(DST_DIR) $(OBJ_DIR)
${0}
endsnippet

snippet c "auto generator makefile"
CC = gcc
CFLAGS = -Wall -g
SUBFIX = c

WORK_DIR  = $(shell pwd)
SRC_DIR = $(WORK_DIR)/src
OBJ_DIR = $(WORK_DIR)/obj
INC_PATH = $(WORK_DIR)/inc
DST_DIR = $(WORK_DIR)/bin
TESTS_DIR = $(WORK_DIR)/tests

SRC = $(wildcard $(SRC_DIR)/*.$(SUBFIX))
OBJS = $(patsubst $(SRC_DIR)/%.$(SUBFIX), $(OBJ_DIR)/%.o, $(SRC))
TARGET = $(DST_DIR)/${1:program}

TESTS = $(wildcard $(TESTS_DIR)/*.sh)


$(shell [ -d $(SRC_DIR) ] || mkdir -p $(SRC_DIR) )
$(shell [ -d $(INC_PATH) ] || mkdir -p $(INC_PATH) )
$(shell [ -d $(OBJ_DIR) ] || mkdir -p $(OBJ_DIR) )
$(shell [ -d $(DST_DIR) ] || mkdir -p $(DST_DIR) )
$(shell [ -d $(TESTS_DIR) ] || mkdir -p $(TESTS_DIR) )

ALL: $(TARGET)

$(TARGET): $(OBJS)
	$(CC) -o $@ $^ $(CFLAGS)

$(OBJS):$(OBJ_DIR)/%.o:$(SRC_DIR)/%.$(SUBFIX)
	$(CC) -c $< -o $@ -I $(INC_PATH) $(CFLAGS)

test: $(TARGET)
	$(MAKE) $(TESTS)
	@printf '\e[32mPassed all tests\e[0m\n'

$(TESTS):
	@echo
	@echo '============'
	@printf "\e[35mTesting $(notdir $@) \e[0m\n"
	@$@
	@printf '\e[32mOK\e[0m\n'
	@echo '============'
	@echo


.PHONY: clean ALL test $(TESTS)
clean:
	-rm -rf $(DST_DIR) $(OBJ_DIR)
${0}
endsnippet

